// Schema File

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

type Restaurant {
  phone            String?
  address          String?
  taxId            String?
  taxIdType        String?
  discountPassword String?
  outletName       String?
  firmName         String?
  isDeleted        Boolean? @default(false)
  taxes            Taxes[]
}

type Taxes {
  type       String
  percentage Float
}

model User {
  id         String      @id @default(auto()) @map("_id") @db.ObjectId
  restaurant Restaurant?
  name       String
  email      String
  phone      String?
  gender     String?
  stewardNo  String?
  password   String
  department String?
  profile    String?
  role       String      @default("staff")
  createdAt  DateTime?   @default(now())
  updatedAt  DateTime?   @updatedAt
  isDeleted  Boolean?    @default(false)

  @@unique([email])
}

model Category {
  id          String        @id @default(auto()) @map("_id") @db.ObjectId
  name        String
  tax         String
  products    Products[]
  subcategory Subcategory[]
  isDeleted   Boolean       @default(false)
  createdAt   DateTime      @default(now())
  updatedAt   DateTime      @updatedAt

  @@unique([name])
}

model Subcategory {
  id         String     @id @default(auto()) @map("_id") @db.ObjectId
  name       String
  category   Category   @relation(fields: [categoryId], references: [id])
  categoryId String     @db.ObjectId
  products   Products[]
  isDeleted  Boolean    @default(false)
  createdAt  DateTime   @default(now())
  updatedAt  DateTime   @updatedAt

  @@unique([name])
}

model Products {
  id            String      @id @default(auto()) @map("_id") @db.ObjectId
  name          String      @unique
  measuredIn    String?     @default("")
  price         String
  code          String
  tax           String?
  taxType       String?
  quantity      Int         @default(0)
  category      Category    @relation(fields: [categoryId], references: [id])
  categoryId    String      @db.ObjectId
  subcategory   Subcategory @relation(fields: [subcategoryId], references: [id])
  subcategoryId String      @db.ObjectId
  isDeleted     Boolean     @default(false)
  createdAt     DateTime    @default(now())
  updatedAt     DateTime    @updatedAt
}

type CardInfo {
  number String @default("")
  amount Float
  bank   String @default("")
}

type Payment {
  cashAmount       Float?
  creditCardAmount Float?
  chequeAmount     Float?
  cards            CardInfo[]
  balance          Float?
  pendingAmount    Float?
}

model Billing {
  id             String     @id @default(auto()) @map("_id") @db.ObjectId
  customerId     String?
  name           String
  phone          String
  billNo         String
  products       Json       @default("[]")
  kotList        Kot[]
  subTotal       Float      @default(0)
  discount       Float      @default(0)
  tax            Float      @default(0)
  netAmount      Float      @default(0)
  status         BillStatus @default(UNSETTLED)
  tableId        String     @db.ObjectId
  table          Tables     @relation(fields: [tableId], references: [id])
  isDeleted      Boolean    @default(false)
  createdAt      DateTime   @default(now())
  updatedAt      DateTime   @updatedAt
  foodDiscount   Float      @default(0)
  barDiscount    Float      @default(0)
  discountReason String?    @default("")
  billReason     String?    @default("")
  billClosedBy   String?    @default("")
  payment        Payment?
  stewardNo      String?
  isBillPrinted  Boolean?   @default(false)
  lastPrinted    DateTime?  @default(now())
  lastVoidBillAt DateTime?  @default(now())
}

model Tables {
  id        String      @id @default(auto()) @map("_id") @db.ObjectId
  code      String
  billing   Billing[]
  isDeleted Boolean     @default(false)
  createdAt DateTime    @default(now())
  updatedAt DateTime    @updatedAt
  status    TableStatus @default(AVAILABLE)
  Kot       Kot[]
}

model Kot {
  id        String    @id @default(auto()) @map("_id") @db.ObjectId
  status    KotStatus @default(ORDER_CONFIRMED)
  kotData   KotItem[]
  kotNo     String
  modifier  String?
  stewardNo String?
  billingId String?   @db.ObjectId
  billing   Billing?  @relation(fields: [billingId], references: [id])
  tableId   String?   @db.ObjectId
  table     Tables?   @relation(fields: [tableId], references: [id])
  isDeleted Boolean   @default(false)
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
}

model Host {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  phone     String   @unique
  name      String
  status    Boolean?
  amount    String?
  tableCode String
  tableId   String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

type KotItem {
  productId      String  @db.ObjectId
  quantity       Int
  modifier       String? @default("")
  isCanceled     Boolean @default(false)
  canceledBy     String  @default("")
  canceledReason String  @default("")
}

type OrderedProducts {
  products Json
  quantity Int
}

enum BillStatus {
  UNSETTLED
  SETTLED
  VOID
  COMPLEMENTARY
}

enum TableStatus {
  AVAILABLE
  OCCUPIED
}

enum KotStatus {
  ORDER_CONFIRMED
  ORDER_CANCELED
}
